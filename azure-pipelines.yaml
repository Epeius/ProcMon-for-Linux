# Azure build pipelines for Procmon-for-Linux

resources:
  repositories:
  - repository: Procmon
    type: github
    endpoint: sysinternals
    name: sysinternals/procmon-for-linux

trigger:
    branches:
      include:
        - release/*
        - main
      exclude:
        - dev/*
        - test/*
  
pr:
- main

stages:
 - stage: "Build"
   jobs:
    - job: "Build_Procmon_Ubuntu_18_04_Package"
      pool: "Procmon-Ubuntu-18.04-Pool"
      steps:
      - checkout: Procmon
      - script: |
          export REVISION=$(Build.BuildId)
          sed -i "s/999999/$REVISION/g" $(Build.SourcesDirectory)/CMakeLists.txt
          mkdir $(Build.SourcesDirectory)/build && cd $(Build.SourcesDirectory)/build
          cmake ..
          make
        displayName: "Build Ubuntu Procmon 18.04 Binary"
      
      - script: |
          mkdir $(Build.SourcesDirectory)/pkgbuild
          cd $(Build.SourcesDirectory)/build
          cpack ..
          mv *.deb $(Build.SourcesDirectory)/pkgbuild
        displayName: "Build Ubuntu Procmon 18.04 Package"
      
      - task: CopyFiles@2
        inputs:
          Contents: '$(Build.SourcesDirectory)/pkgbuild/*.deb'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/Ubuntu_18.04/'
        displayName: 'Copy build artifacts to staging'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/Ubuntu_18.04'
          ArtifactName: 'Ubuntu_18_04_drop'
          publishLocation: 'Container'
        displayName: 'Copy DEB package to artifacts'
      
    - job: "Build_Procmon_Ubuntu_20_04_Package"
      pool: "Procmon-Ubuntu-20.04-Pool"
      steps:
         - checkout: Procmon
         - script: |
             export REVISION=$(Build.BuildId)
             sed -i "s/999999/$REVISION/g" $(Build.SourcesDirectory)/CMakeLists.txt
             mkdir $(Build.SourcesDirectory)/build && cd $(Build.SourcesDirectory)/build
             cmake ..
             make
           displayName: "Build Procmon Ubuntu 20.04 Binary"
    
         - script: |
            mkdir $(Build.SourcesDirectory)/pkgbuild
            cd $(Build.SourcesDirectory)/build
            cpack ..
            mv *.deb $(Build.SourcesDirectory)/pkgbuild
           displayName: "Build Procmon Ubuntu 20.04 Package"
    
         - task: CopyFiles@2
           inputs:
             Contents: '$(Build.SourcesDirectory)/pkgbuild/*.deb'
             TargetFolder: '$(Build.ArtifactStagingDirectory)/Ubuntu_20.04/'
           displayName: 'Copy build artifacts to staging'

         - task: PublishBuildArtifacts@1
           inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)/Ubuntu_20.04'
            ArtifactName: 'Ubuntu_20_04_drop'
            publishLocation: 'Container'
           displayName: 'Copy to artifacts'

 - stage: Sign
   jobs:
    - job: "Sign_Procmon_Ubuntu_18_04"
      pool: "Procmon-Ubuntu-18.04-Pool"
      condition: eq(variables['Sign'], 'true')
      workspace:
        clean: all      
      steps:
      
      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'Ubuntu_18_04_drop'
          targetPath: '$(Build.SourcesDirectory)'
           
      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: 'ESRP CodeSigning DEB'
        inputs:
          ConnectedServiceName: 'Sysinternals ESRP CodeSigning'
          FolderPath: '$(Build.SourcesDirectory)/Ubuntu_18.04_drop'
          Pattern: '*.deb'
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                "keyCode": "CP-450779-Pgp",
                "OperationCode": "LinuxSign",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              }
            ]

      - task: CopyFiles@2
        inputs:
          Contents: '$(Build.SourcesDirectory)/Ubuntu_18_04_drop/pkgbuild/*.deb'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/Ubuntu_18_04_Signed/'
        displayName: 'Copy signed DEB package to staging'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/Ubuntu_18_04_Signed/'
          ArtifactName: 'Ubuntu_18_04_Signed'
          publishLocation: 'Container'
        displayName: 'Copy signed DEB package to artifacts'

    - job: "Sign_Procmon_Ubuntu_20_04"
      pool: "Procmon-Ubuntu-20.04-Pool"
      condition: eq(variables['Sign'], 'true')
      workspace:
        clean: all      
      steps:

      - task: DownloadPipelineArtifact@2
        inputs:
          buildType: 'current'
          artifactName: 'Ubuntu_20_04_drop'
          targetPath: '$(Build.SourcesDirectory)/Ubuntu_20_04_drop'

      - task: SFP.build-tasks.custom-build-task-1.EsrpCodeSigning@1
        displayName: 'ESRP CodeSigning DEB'
        inputs:
          ConnectedServiceName: 'Sysinternals ESRP CodeSigning'
          FolderPath: '$(Build.SourcesDirectory)/Ubuntu_20.04_drop'
          Pattern: '*.deb'
          signConfigType: inlineSignParams
          inlineOperation: |
            [
              {
                "keyCode": "CP-450779-Pgp",
                "OperationCode": "LinuxSign",
                "Parameters": {},
                "ToolName": "sign",
                "ToolVersion": "1.0"
              }
            ]

      - task: CopyFiles@2
        inputs:
          Contents: '$(Build.SourcesDirectory)/Ubuntu_20_04_drop/pkgbuild/*.deb'
          TargetFolder: '$(Build.ArtifactStagingDirectory)/Ubuntu_20_04_Signed/'
        displayName: 'Copy signed DEB package to staging'

      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/Ubuntu_20_04_Signed/'
          ArtifactName: 'Ubuntu_20_04_Signed'
          publishLocation: 'Container'
        displayName: 'Copy signed DEB package to artifacts'
 